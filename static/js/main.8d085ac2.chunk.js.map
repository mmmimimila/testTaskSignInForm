{"version":3,"sources":["components/SignIn.tsx","components/DevicesList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","schema","yup","shape","email","matches","required","password","SignIn","useState","setEmail","setPassword","apiErrors","setApiErrors","classes","history","useHistory","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","data","console","log","axios","method","url","JSON","stringify","headers","then","res","localStorage","setItem","access_token","push","catch","err","response","error","msg","dir","noValidate","TextField","value","onChange","event","target","fullWidth","id","label","name","type","autoComplete","autoFocus","message","map","FormControlLabel","control","Checkbox","Button","Grid","container","item","xs","Box","mt","table","minWidth","DevicesList","devices","setDevices","useEffect","getItem","Authorization","page","last_page","sort_field","sort","search_string","device_state","is_archived","paginate","append_fields","per_page","metering_devices","length","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","device","scope","last_active","App","exact","from","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d085ac2.chunk.js","sourcesContent":["import React, {SyntheticEvent, useState} from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useHistory} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://nekta.tech/\">\n        NEKTA\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\ntype Inputs = {\n  email: string;\n  password: string;\n};\n\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .matches(/.+@.+\\..+/i, `Email должен содержать @. Пример: email@example.com`)\n    .required(\"Это поле обязательно для заполнения\"),\n  password: yup\n    .string()\n    .matches(/(.*?).{8,}/, \"Пароль должен состоять минимум из восьми символов\")\n    .required(\"Это поле обязательно для заполнения\"),\n});\n\n  export const SignIn = () => {\n\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [apiErrors, setApiErrors] = useState<string[]>([]);\n\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const { register, handleSubmit, formState: { errors }} = useForm<Inputs>({resolver: yupResolver(schema)\n  });\n  const onSubmit: SubmitHandler<Inputs> =  (data: {email: string; password: string}) => {\n    console.log(data);\n    axios({\n      method: 'post',\n      url: 'https://core.nekta.cloud/api/auth/login ',\n      data: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n    }\n    }).then(function (res) {\n        localStorage.setItem('token', res.data.data.access_token);\n        history.push('/devicesList');\n        console.log(res);\n      })\n      .catch(function (err) {\n        console.log('error', err.response.data.error.data.msg);\n        setApiErrors([err.response.data.error.data.msg]);\n        console.dir(err);\n    });\n}\n\n\n  const changeHandlerEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  }\n\n  const changeHandlerPassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value)\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Авторизация\n        </Typography>\n        <form onSubmit={handleSubmit(onSubmit)} className={classes.form} noValidate>\n          <TextField\n            value={email}\n            {...register(\"email\", {required: true})}\n            onChange={changeHandlerEmail}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n            {errors.email?.message}\n          <TextField\n            value={password}\n            {...register(\"password\", {required: true})}\n            onChange={changeHandlerPassword}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Пароль\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"/>\n            {errors.password?.message}\n            {apiErrors.map(error => <div>{error}</div>)}\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Запомнить\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Войти\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Забыли пароль?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Нет аккаунта? Зарегистрируйтесь\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default SignIn;","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { InterfaceDevice } from \"../types\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport const DevicesList = () => {\n  const [devices, setDevices] = useState<InterfaceDevice[]>(\"\");\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const token: any = localStorage.getItem(\"token\");\n    if (!token) {\n      history.push(\"/login\");\n    } else {\n      axios({\n        method: \"post\",\n        url: \"https://core.nekta.cloud/api/device/metering_devices\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n        data: {\n          page: 1,\n          last_page: 0,\n          sort_field: \"id\",\n          sort: \"desc\",\n          search_string: null,\n          device_state: \"all\",\n          is_archived: false,\n          paginate: true,\n          append_fields: [\"active_polling\", \"attributes\", \"tied_point\"],\n          per_page: 10,\n        },\n      })\n        .then(function (res) {\n          console.log(\"response\", res.data.data.metering_devices.data);\n          setDevices(res.data.data.metering_devices.data);\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n    }\n  }, [history]);\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {devices.length === 0 ? (\n        <div>no devices</div>\n      ) : (\n            <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>ID</TableCell>\n                  <TableCell align=\"right\">Название</TableCell>\n                  <TableCell align=\"right\">Дата последней активности</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {devices.map((device) => (\n                  <TableRow key={device.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                    {device.id}\n                    </TableCell>\n                    <TableCell align=\"right\">{device.name}</TableCell>\n                    <TableCell align=\"right\">{device.last_active}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </>\n  )\n\n};\n\nexport default DevicesList;\n","import React from 'react';\nimport SignIn from './components/SignIn';\nimport DevicesList from './components/DevicesList';\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <>\n    <BrowserRouter>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/login\"/>\n        <Route exact path=\"/login\" component={() => <SignIn/>}/>\n        <Route exact path=\"/devicesList\" component={() => <DevicesList/>}/>\n      </Switch>\n    </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3000/';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}