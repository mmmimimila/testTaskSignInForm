{"version":3,"sources":["components/SignIn.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","schema","yup","shape","email","matches","required","password","SignIn","classes","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","data","console","log","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","fullWidth","id","label","name","autoComplete","autoFocus","message","type","FormControlLabel","control","Checkbox","value","Button","Grid","container","item","xs","Box","mt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eb5b130.chunk.js","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://nekta.tech/\">\n        NEKTA\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\ntype Inputs = {\n  email: string;\n  password: string;\n};\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .matches(/.+@.+\\..+/i, `Email должен содержать @. Пример: email@example.com`)\n    .required(\"Это поле обязательно для заполнения\"),\n  password: yup\n    .string()\n    .matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#\\$%\\^&\\*]).{8,}$/, \"Пароль должен состоять из восьми и более символов: минимум одну цифру, одну заглавную и строчную букву)\")\n    .required(\"Это поле обязательно для заполнения\"),\n});\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  const { register, handleSubmit, formState: { errors }} = useForm<Inputs>({resolver: yupResolver(schema)\n  });\n  const onSubmit = handleSubmit(data => console.log(data));\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Авторизация\n        </Typography>\n        <form onSubmit={onSubmit} className={classes.form} noValidate>\n          <TextField\n            // ref = {...register(\"email\", { required: true })}\n            // {...register({required: true})}\n            {...register(\"email\", {required: true})}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n            {/* {errors.email && <span>Это поле обязательно для заполнения</span>} */}\n            {errors.email?.message}\n          <TextField\n            // ref = {...register(\"password\", { required: true })}\n            // {...register({required: true})}\n            {...register(\"password\", {required: true})}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Пароль\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"/>\n            {/* {errors.password && <span>Это поле обязательно для заполнения </span>} */}\n            {errors.password?.message}\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Запомнить\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Войти\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Забыли пароль?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Нет аккаунта? Зарегистрируйтесь\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React from 'react';\nimport SignIn from './components/SignIn'\n\nfunction App() {\n  return (\n    <>\n      <SignIn/>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}